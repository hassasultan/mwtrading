/*!
 * The Final Countdown for jQuery v2.0.4
*/(function (i) { "use strict"; typeof define == "function" && define.amd ? define(["jquery"], i) : i(jQuery) })(function (i) { "use strict"; var u = 100, l = [], h = []; h.push(/^[0-9]*$/.source), h.push(/([0-9]{1,2}\/){2}[0-9]{4}( [0-9]{1,2}(:[0-9]{2}){2})?/.source), h.push(/[0-9]{4}([\/\-][0-9]{1,2}){2}( [0-9]{1,2}(:[0-9]{2}){2})?/.source), h = new RegExp(h.join("|")); function p(t) { if (t instanceof Date) return t; if (String(t).match(h)) return String(t).match(/^[0-9]*$/) && (t = Number(t)), String(t).match(/\-/) && (t = String(t).replace(/\-/g, "/")), new Date(t); throw new Error("Couldn't cast `" + t + "` to a date object.") } var f = { Y: "years", m: "months", w: "weeks", d: "days", D: "totalDays", H: "hours", M: "minutes", S: "seconds" }; function d(t) { return function (e) { var s = e.match(/%(-|!)?[A-Z]{1}(:[^;]+;)?/gi); if (s) for (var n = 0, y = s.length; n < y; ++n) { var a = s[n].match(/%(-|!)?([a-zA-Z]{1})(:[^;]+;)?/), v = new RegExp(a[0]), c = a[1] || "", g = a[3] || "", o = null; a = a[2], f.hasOwnProperty(a) && (o = f[a], o = Number(t[o])), o !== null && (c === "!" && (o = w(g, o)), c === "" && o < 10 && (o = "0" + o.toString()), e = e.replace(v, o.toString())) } return e = e.replace(/%%/, "%"), e } } function w(t, e) { var s = "s", n = ""; return t && (t = t.replace(/(:|;|\s)/gi, "").split(/\,/), t.length === 1 ? s = t[0] : (n = t[0], s = t[1])), Math.abs(e) === 1 ? n : s } var r = function (t, e, s) { this.el = t, this.$el = i(t), this.interval = null, this.offset = {}, this.instanceNumber = l.length, l.push(this), this.$el.data("countdown-instance", this.instanceNumber), s && (this.$el.on("update.countdown", s), this.$el.on("stoped.countdown", s), this.$el.on("finish.countdown", s)), this.setFinalDate(e), this.start() }; i.extend(r.prototype, { start: function () { this.interval !== null && clearInterval(this.interval); var t = this; this.update(), this.interval = setInterval(function () { t.update.call(t) }, u) }, stop: function () { clearInterval(this.interval), this.interval = null, this.dispatchEvent("stoped") }, pause: function () { this.stop.call(this) }, resume: function () { this.start.call(this) }, remove: function () { this.stop(), l[this.instanceNumber] = null, delete this.$el.data().countdownInstance }, setFinalDate: function (t) { this.finalDate = p(t) }, update: function () { if (this.$el.closest("html").length === 0) { this.remove(); return } this.totalSecsLeft = this.finalDate.getTime() - new Date().getTime(), this.totalSecsLeft = Math.ceil(this.totalSecsLeft / 1e3), this.totalSecsLeft = this.totalSecsLeft < 0 ? 0 : this.totalSecsLeft, this.offset = { seconds: this.totalSecsLeft % 60, minutes: Math.floor(this.totalSecsLeft / 60) % 60, hours: Math.floor(this.totalSecsLeft / 60 / 60) % 24, days: Math.floor(this.totalSecsLeft / 60 / 60 / 24) % 7, totalDays: Math.floor(this.totalSecsLeft / 60 / 60 / 24), weeks: Math.floor(this.totalSecsLeft / 60 / 60 / 24 / 7), months: Math.floor(this.totalSecsLeft / 60 / 60 / 24 / 30), years: Math.floor(this.totalSecsLeft / 60 / 60 / 24 / 365) }, this.totalSecsLeft === 0 ? (this.stop(), this.dispatchEvent("finish")) : this.dispatchEvent("update") }, dispatchEvent: function (t) { var e = i.Event(t + ".countdown"); e.finalDate = this.finalDate, e.offset = i.extend({}, this.offset), e.strftime = d(this.offset), this.$el.trigger(e) } }), i.fn.countdown = function () { var t = Array.prototype.slice.call(arguments, 0); return this.each(function () { var e = i(this).data("countdown-instance"); if (e !== void 0) { var s = l[e], n = t[0]; r.prototype.hasOwnProperty(n) ? s[n].apply(s, t.slice(1)) : String(n).match(/^[$A-Z_][0-9A-Z_$]*$/i) === null ? (s.setFinalDate.call(s, n), s.start()) : i.error("Method %s does not exist on jQuery.countdown".replace(/\%s/gi, n)) } else new r(this, t[0], t[1]) }) } });
//# sourceMappingURL=/s/files/1/0641/3431/6288/t/2/assets/counter.js.map?v=91558200207281618801650619280
